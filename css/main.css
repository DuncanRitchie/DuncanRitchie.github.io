/* Fonts are not imported in this file, to avoid CORS problems when this file is imported elsewhere.
  CSS files specifically for fonts need to be imported directly, for example
	<link rel="stylesheet" href="https://fonts.duncanritchie.co.uk/main.css">
	That’s a reference to my own Font Server, where custom font subsetting etc is applied.
*/

html,body {
	margin: 0;
	padding: 0;
	scroll-behavior: smooth;
	hyphens: manual;
	font-family: "Alegreya", "Alegreya Subset", serif;
}

html {
	font-size: 24px;
	font-size: calc(1.1875rem + 9 * ((100vw - 22.5rem) / 2100));
	height: 100%;
	--colour1: #89b3ea;
	--colour2: #e1efff;
	--colour3: #c6d1be;
	--colour4: #c2df65;
	--colour5: #cff295;
	--colour6: #7a934c;
	--nav-text: #333333;
	--body-text: #111111;
	--unvisited-text: #00465c;
	--visited-text: #76027a;
	--active-text: #d30035;
}

body {
	min-height: 100vh;
	background-color: var(--colour6);
	/* Browsers that don’t do gradients will use the jpeg background. */
	background-image: url(../images/gradient-background.jpg);
	background-size: 100% 100%;
	background-image: linear-gradient(
		#ffffff20,
		#ffffff20 /* Translucent white overlay as a gradient because background-image doesn’t accept a solid colour. */
	), linear-gradient(
		var(--colour1),
		var(--colour2),
		var(--colour3),
		var(--colour4),
		var(--colour5),
		var(--colour6)
	);
	background-attachment: fixed;
	background-size: 100% 100vh;
	color: var(--body-text);
}

body :focus {
	outline: dashed 2px var(--visited-text);
}

/* Hide focus outline if the browser supports :focus-visible
and the element isn’t :focus-visible. */
body :focus:not(:focus-visible) {
	outline: none;
}

* {
	tab-size: 2;
}

article:not(.showcase-group) {
	padding-top: 1rem;
	line-height: 1.5;
}

a {
	text-decoration: underline;
}

a:link {
	color: var(--unvisited-text);
}

article:not(.showcase-group) :not(:visited):focus {
	outline-color: var(--unvisited-text);
}

a:visited {
	color: var(--visited-text);
}

a:hover {
	color: var(--colour6);
	text-decoration: none;
	border-bottom: 1px thin;
}

a:link:active {
	color: var(--active-text);
}

article:not(.showcase-group) :hover:focus {
	outline-color: var(--colour6);
}

button {
	color: inherit;
	cursor: pointer;
}

table {
	min-width: 100%;
}

th,
td {
	padding: 0.125rem 0.25rem;
}

td {
	border-bottom: 1px solid var(--colour6);
	border-right: 1px solid var(--colour6);
}

*:not(.main-image).hidden {
	display: none;
}

/* IE gives a margin by default, which we don’t want. */
figure {
	margin: 0;
}

/* Applies to <h1> and the non-icon part of the GitHub links on the project showcase.
Having exactly one <h1> on a page is good for accessibility, but conflicts with my layout, so I hide it from sighted users.
Screenreaders will read the words eg “More about me” or “Cyberpet code”, but sighted users won’t.
Taken from https://webaim.org/techniques/css/invisiblecontent/ */
.screenreader-only {
	position: absolute;
	left: -10000px;
	top: auto;
	width: 1px;
	height: 1px;
	overflow: hidden;
}

section article {
	padding: 0;
	margin: 0;
}

article:not(section article) {
	margin: auto;
	width: calc(100% - 2rem);
}

h1, h2, h3, h4, h5, h6 {
	color: #3c381d; /* h2 color is overruled if intersection observer exists, or in showcase. */
	font-weight: normal;
	font-weight: 400;
	margin-bottom: 0.5rem;
	text-wrap: balance;
}

/* <h1> elements without the screenreader-only class should still be visible. */
h1 {
	font-size: 3rem;
}

h2 {
	font-size: 2.5rem;
}

section article h2 {
	text-align: right;
}

h3 {
	font-size: 2rem;
}

h4 {
	font-size: 1.5rem;
}

h5 {
	font-size: 1.125rem;
}

h6 {
	font-size: 0.875rem;
}

figcaption {
	text-wrap: balance;
}

/* This selector is for adding an arrow after external links inside articles. */
article p:not(.img-container) a[href^="http"]:not([href*="duncanritchie.co.uk"])::after {
	content: "↗";
	vertical-align: super;
	font-size: 60%;
	padding-left: 3.6pt;
	padding-left: 0.15rem;
	/* Remove the underline. We can’t do `text-decoration: none;` because the underline
	for the entire <a> element would still extend under the ::after pseudo-element. */
	clip-path: polygon(0 0, 100% 0, 100% 76%, 0 76%);
	/* Aside: `display: inline-block;` would also remove the underline, but would allow
	a line-break to appear before the pseudo-element. */
}

article .img-container {
	padding-top: 24px;
	padding-top: 1rem;
	text-align: right;
}

code, kbd, samp, pre {
	font-size: 0.84em;
	background-color: #33333310;
	padding: 0 .125em;
}

pre {
	overflow-x: auto;
}

kbd {
	border: 1px solid var(--nav-text);
	border-radius: .125em;
}

/* <del> & <ins> are inline elements. For an entire deleted paragraph, I wrap <del> in <p class="del">, and the red formatting will be applied to the paragraph, not the <del> element. Likewise for <ins> with green formatting. */
/* I would do something like p:has(> del:first-child:last-child), but that selects paragraphs that contain undeleted text outside of <del>, as well as selecting paragraphs that only contain deleted text. So the .del & .ins classes are necessary. */
.del del, .ins ins {
	text-decoration-color: transparent;
}

del:not(.del del) {
	text-decoration-color: var(--active-text);
	background-color: #d3003510;
}
.del {
	border-left: 3px solid var(--active-text);
	padding-left: 1rem;
	background-color: #d3003510;
}

ins:not(.ins ins) {
	text-decoration-color: #03aa21;
	background-color: #03aa2112;
}
.ins {
	border-left: 3px solid #03aa21;
	padding-left: 1rem;
	background-color: #03aa2112;
}

/* My first use of <mark> and this CSS for it was on my Latinitas Recens mirror. */
mark {
	background-image: linear-gradient(var(--colour1) -25%, var(--colour2) 50%, var(--colour1) 125%);
	border-radius: .125em;
}

/* CSS for customising the <summary> arrow is adapted from velut. */

/* Hide the <summary>’s default arrow.
	(This works because <summary> has {display: list-item} by default,
	which would give the arrow as a ::marker pseudo-element.) */
summary {
	display: block;
}

/* Arrow next to <summary> */
summary::before {
	content: '    ';
	background-image: url(https://www.duncanritchie.co.uk/images/arrow-down.svg);
	background-repeat: no-repeat;
	background-position: center;
	background-size: 0.625em;
	display: inline-block;
	width: 0.625em;
	margin-right: 0.625em;
}

/* Arrow is positioned on the left side of <summary> */
/* It points right when <details> is closed and rotates to point down on opening. */
summary::before {
	transition: transform 0.25s;
	transform: rotate(-0.25turn);
}

details[open] summary::before {
	transform: rotate(0turn);
}

address {
	font-style: unset;
}

@media screen and (min-width: calc(42.125rem + 0.0001rem)) {
	.has-intersection-observer section article:not(.showcase-group) h2 {
		font-size: 3.5rem;
		padding-top: 0.5rem;
		right: 1.25rem;
		line-height: 110%;
		position: absolute;
		/* Browsers that don’t understand background-clip will show white text on a gradient-filled rectangle. */
		color: white;
		background: -webkit-linear-gradient(top, #111007, #58522c 33%);
		background: linear-gradient(180deg, #111007, #58522c 33%);
		/* The height of the gradient fill is not dependent on the height of the h2. */
		background-size: 100% 9.45rem;
		background-position: top;
		-webkit-background-clip: text;
		background-clip: text;
		-webkit-text-fill-color: transparent;
		z-index: 1;
		filter:
			drop-shadow(0 0 1px #fff)
			drop-shadow(0 0 1px var(--colour2))
			drop-shadow(0 0 2px var(--colour2))
			drop-shadow(0 0 3px var(--colour2))
			drop-shadow(0 0 1em var(--colour2))
			;
	}

	/* Hack to stop background-clip cutting off the descenders of the last line of the h2. */
	/* This would happen when descenders extended beyond the line-height. */
	/* \00000a is a newline, therefore the last line of the h2 is no longer the last line. */
	/* The space after the newline is non-breaking; the newline would be ignored without it. */
	.has-intersection-observer section article:not(.showcase-group) h2::after {
		content: "\00000a ";
		white-space: pre;
		white-space: pre-wrap;
		line-height: 0;
		font-size: 0.5em;
	}

	.has-intersection-observer section article h2 ~ p {
		z-index: 1;
		position: relative;
	}

	.has-intersection-observer section article:not(.showcase-group) h2 + p {
		margin-top: 9.5rem;
	}

	#home .main-image-figure img {
		object-position: 25% 55%;
	}
}

/* When headings wrap onto two lines, the paragraphs following them need to be moved down
explicitly because the headings are positioned absolutely and are therefore out of flow.
The max-width values here are defined by where wrapping occurs (in Firefox), determined
by the text & font. The min-width is the threshold between “mobile” and “desktop” view. */
@media screen and (min-width: calc(42.125rem + 0.0001rem)) and (max-width: 45.125rem) {
	.has-intersection-observer #home-article h2 + p {
		margin-top: 11.5rem;
	}
}
@media screen and (min-width: calc(42.125rem + 0.0001rem)) and (max-width: 75rem) {
	.has-intersection-observer #velut-article h2 + p {
		margin-top: 11.5rem;
	}
}
@media screen and (min-width: calc(42.125rem + 0.0001rem)) and (max-width: 46.5rem) {
	.has-intersection-observer #website-development-article h2 + p {
		margin-top: 11.5rem;
	}
}
@media screen and (min-width: calc(42.125rem + 0.0001rem)) and (max-width: 58rem) {
	.has-intersection-observer #tiq-article h2 + p {
		margin-top: 11.5rem;
	}
}

/* Styles for the navbar. */

nav {
	position: fixed;
	display: flex;
	z-index: 2;
	width: calc(100% - 1.5rem);
	justify-content: space-between;
	align-items: center;
	top: 1rem;
	margin: 0;
	padding: 0 0.75rem;
	font-size: 0.7917rem;
	background-color: #bfd4ef;
	background-color: #ffffff7f;
	background-image: linear-gradient(180deg, #ffffff33, #ffffff66, #ffffff33);
	color: var(--nav-text);
	text-decoration: none;
}

/* Blur the background of nav */
nav::before {
	position: absolute;
	z-index: -1;
	content: '';
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	backdrop-filter: blur(4px) brightness(103%);
}

nav a:link, nav a:visited {
	color: inherit;
	text-decoration: inherit;
}

nav #nav-icon-a {
	display: flex;
	align-items: center;
	padding: 0 0.5rem 0 0.25rem;
}

nav #nav-icon {
	width: 1.5rem;
	height: 1.5rem;
	margin-top: 0.25rem;
	margin-right: 0.5rem;
	padding: 0;
	background-color: initial;
}

nav ul {
	display: flex;
	list-style-type: none;
	margin: 0;
	padding: 0;
	align-items: center;
	flex-basis: max-content;
	flex-grow: 1;
}

nav ul li a:not(#nav-icon-a),label {
	padding: 0.5rem;
}

nav label:hover, nav a:hover, nav button:hover {
	color: var(--colour6);
	background-image: linear-gradient(#ffffff00, #ffffff00, #ffffff00, #2d4a1b4f);
}

nav ul input {
	position: absolute;
	top: -0.15rem;
	border: 2.5rem solid transparent;
	width: 5rem;
	height: 0;
	z-index: -2;
	opacity: 0;
}

nav ul input:focus + label {
	outline: dashed 2px var(--visited-text);
}

nav ul li a,button,label {
	padding-left: 0.375rem;
	padding-right: 0.375rem;
}

nav ul ul {
	position: absolute;
	flex-direction: column;
	display: none;
	font-size: 0.8333rem;
	background-color: #9ebee7;
	background-color: #ffffffcf;
	clip-path: polygon(0 0, 90% 0, 100% 100%, 0 100%);
}

/* Blur the background of nav submenus */
nav ul ul::before {
	position: absolute;
	z-index: -1;
	content: '';
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	backdrop-filter: blur(3px) brightness(103%);
}

nav label {
	cursor: pointer;
	padding: 0.5rem 0.75rem;
}

/* These rules are for Internet Explorer to display the down arrow for the nav menus correctly.
For the hover state to be a different colour to the non-hover state, IE needs a different image.
Modern browsers are capable of colouring the SVG with CSS if the SVG is applied as a mask,
so that’s what we do in the @supports query, which over-rides the IE rules. */
#nav-main-list label::after, #nav-main-list button::after {
	content: "⮟";
	font-size: 0.6667rem;
	color: transparent;
	background-image: url(../images/arrow-down.svg);
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
}

#nav-main-list label:hover::after, #nav-main-list button:hover::after {
	background-image: url(../images/arrow-down-hover.svg); /* Only IE needs this. */
}

#socials-list a::before {
	content: '';
	font-size: 0.6667rem;
	color: transparent;
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
}

/* #socials-list #nav-github::before {
	background-image: url(../images/github.svg);
} */

/* In modern browsers, this over-rides the previous code for displaying the nav menu arrow & GitHub/LinkedIn logos. */
@supports (mask-size: contain) or (-webkit-mask-size: contain) {
	#nav-main-list label::after, #nav-main-list button::after {
		width: 0.95em;
		height: 0.5em;
		display: inline-block;
		content: '';
		-webkit-mask: url(../images/arrow-down.svg) no-repeat 50% 50%;
		mask: url(../images/arrow-down.svg) no-repeat 50% 50%;
		-webkit-mask-size: contain;
		mask-size: contain;
		background: unset;
		background-color: var(--nav-text);
	}

	#nav-main-list label:hover::after, #nav-main-list button:hover::after {
		background: unset;
		background-color: var(--colour6);
	}

	#socials-list a::before {
		width: 1.2em;
		height: 1.2em;
		display: inline-block;
		content: '';
		/* -webkit-mask: url(../images/github.svg) no-repeat 50% 50%;
		mask: url(../images/github.svg) no-repeat 50% 50%; */
		-webkit-mask-size: contain;
		mask-size: contain;
		background: unset;
		background-color: var(--nav-text);
	}

	#socials-list a:hover::before {
		background: unset;
		background-color: var(--colour6);
	}

	#socials-list #nav-github::before {
		-webkit-mask: url(../images/github.svg) no-repeat 50% 50%;
		mask: url(../images/github.svg) no-repeat 50% 50%;
		margin-bottom: -0.15em;
		margin-right: 0.1em;
	}

	#socials-list #nav-linkedin::before {
		-webkit-mask: url(../images/linkedin.svg) no-repeat 50% 50%;
		mask: url(../images/linkedin.svg) no-repeat 50% 50%;
		margin-bottom: -0.15em;
	}
}

#nav-main-list :checked ~ label, #nav-main-list button[aria-expanded="true"] {
	background-color: #ffffffdf;
}

#nav-main-list :checked ~ ul {
	display: block;
}

#nav-main-list button[aria-expanded="true"] ~ ul {
	display: block;
}

nav ul ul li {
	padding: 0.25rem 0.5rem 0 0;
	width: 100%;
}

nav ul ul li a {
	display: inline-block;
	padding: 0.25rem 0.5rem 0.25rem 0.75rem;
	width: 100%;
}

nav #layout-toggle-div {
	display: none;
	width: 3rem;
	text-align: center;
	flex-grow: 1;
}

nav button {
	font-family: inherit;
	font-size: inherit;
	background-color: transparent;
	box-shadow: none;
	border: none;
	min-height: 2rem;
}

@media (max-width: 46.625rem) {
	nav #about-me-hidden-text {
		display: none;
	}
}

nav #socials-list {
	flex-grow: 0;
}



/* CSS for mobile. */
@media (max-width: 42.125rem) {
	nav #nav-icon-a {
		padding-right: 0;
	}

	nav {
		display: grid;
		grid-template-columns: 1fr 2fr;
		grid-template-areas:
			"icon socials"
			"icon main";
		padding: 0 0.5rem 0 0.375rem;
		width: calc(100% - 0.875rem);
	}

	nav #nav-icon-a {
		grid-area: icon;
		display: flex;
		justify-content: start;
		padding: 0.5rem;
		height: calc(100% - 1rem);
	}

	nav #nav-icon {
		margin: 0 0.375rem 0 0;
	}

	nav a, nav button, nav label {
		display: inline-block;
		text-align: center;
	}

	nav #nav-main-list {
		width: 100%;
		grid-area: main;
		justify-content: stretch;
		border-top: 1px solid var(--nav-text);
	}

	nav #nav-main-list > li {
		flex: 1 1 0;
	}

	#nav-main-list > li button {
		width: 100%;
	}

	#nav-main-list li a {
		text-align: left;
		width: calc(100% - 0.5rem);
	}

	nav #about-me-hidden-text {
		display: unset;
	}

	nav ul ul {
		clip-path: unset;
		margin: 0;
		padding: 0.25rem 0.5rem 0 0;
	}

	nav #socials-list {
		grid-area: socials;
		justify-content: end;
		margin-right: 0.5rem;
	}

	#socials-list li {
		flex: 0 1 5rem;
	}

	nav #socials-list li a {
		padding: 0.5rem;
		width: calc(100% - 1rem);
		display: inline-block;
		text-align: center;
	}

	.main-image {
		width: 100%;
		height: 75vw;
		object-fit: cover;
		padding-top: 5rem;
	}

	.text-wrap-guide {
		display: none;
	}

	article:not(.showcase-group) {
		padding: 0.75rem 0.5rem 1.5rem;
		padding: 0.75rem max(0.75rem, 4vw) 1.5rem;
	}

	/* Articles not wrapped in <section>, eg style-guide */
	nav + article:not(.showcase-group) {
		padding-top: 3rem;
	}

	article:not(.showcase-group):last-of-type {
		padding-bottom: 2rem;
	}

	section:not(:last-of-type):not(#velut) article {
		border-bottom: 2px solid var(--colour6);
	}

	h2 {
		padding: 0;
		margin: 0;
		font-size: 2.5rem;
	}

	.main-image-figure figcaption {
		position: absolute;
		max-width: calc(80% - 2rem);
		left: 1rem;
		bottom: auto;
		transform: translateY(-100%);
		font-size: 0.8rem;
		color: var(--body-text);
		background-color: var(--colour5);
		background-image: linear-gradient(var(--colour5), var(--colour6));
		padding: 0.25rem 3rem 0.25rem 1rem;
		display: flex;
		align-items: end;
		clip-path: polygon(0 0, calc(100% - 0.25rem) 0, 100% 100%, 0.25rem 100%);
		opacity: 100%;
	}
}

/* CSS for smaller mobiles. */

@media (max-width: 26.5rem) {
	nav {
		grid-template-columns: min-content 1fr;
	}
}

@media (max-width: 23.875rem) {
	nav #about-me-hidden-text {
		display: none;
	}
}

@media (max-width: 22.1875rem) {
	nav #nav-icon-a {
		justify-content: center;
		padding: 0.25rem;
		flex-direction: column;
		align-items: center;
	}

	nav #nav-icon {
		margin-right: 0;
	}

	.main-image {
		padding-top: 5rem;
	}
}


